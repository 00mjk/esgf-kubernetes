apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: esgf-postgres
  labels:
    stack: esgf
    component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      stack: esgf
      component: postgres
  template:
    metadata:
      labels:
        stack: esgf
        component: postgres
      #annotations:
      #  checksum/postgres-secrets: {{ include (print $.Template.BasePath "/postgres/secret.yaml") . | sha256sum }}
    spec:
      containers:
        - name: postgres
          image: cedadev/esgf-postgres:latest
          #imagePullPolicy: {{ default "" .Values.postgres.imagePullPolicy | quote }}
          ports:
            - name: postgres
              containerPort: 5432
          # The readiness and liveness probes run the same thing, but the liveness
          # probe just waits a while before kicking in whereas the readiness probe
          # starts straight away
          #readinessProbe:
          #  tcpSocket: &probe
          #    port: 5432
          #  initialDelaySeconds: 10
          #  periodSeconds: 10
          #livenessProbe:
          #  tcpSocket: *probe
          #  initialDelaySeconds: 60
          #  periodSeconds: 10
          env:
            - name: DBSUPER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-postgres-secrets
                  key: database-password
            - name: ESGCET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-postgres-secrets
                  key: database-publisher-password
            - name: ESGF_ROOTADMIN_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: esgf-config
                  key: root-admin-email
            - name: ESGF_ROOTADMIN_USERNAME
              value: rootAdmin
            - name: ESGF_ROOTADMIN_OPENID
              valueFrom:
                configMapKeyRef:
                  name: esgf-config
                  key: root-admin-openid
            - name: ESGF_ROOTADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-postgres-secrets
                  key: rootadmin-password
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/pgsql/data
          #resources:
#{{ toYaml .Values.postgres.resources | indent 12 }}
      volumes:
        - name: postgres-data
          emptyDir: {}
