apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: esgf-idp-node
  labels:
    stack: esgf
    component: idp-node
spec:
  replicas: 1
  selector:
    matchLabels:
      stack: esgf
      component: idp-node
  template:
    metadata:
      labels:
        stack: esgf
        component: idp-node
    spec: 
      initContainers:
        # Wait for postgres to become available before starting
        - name: wait-for-postgres-esgcet
          image: postgres
          env:
            - name: PGHOST
              value: esgf-postgres-esgcet
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              value: dbsuper
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-postgres-esgcet-secrets
                  key: database-password
            - name: PGDATABASE
              value: esgcet
          command:
            # Try every 5 seconds for no longer than 10 mins
            - bash
            - -c
            - |
              for i in $(seq 120); do
                sleep 5
                echo "Attempt $i of 120"
                if pg_isready; then exit 0; fi
              done
              exit 1
      containers:
        - name: idp-node
          image: esgfhub/idp:latest
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: ESGF_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: esgf-config
                  key: esgf-hostname
            - name: ESGF_DATABASE_HOST
              value: esgf-postgres-esgcet
            - name: ESGF_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-postgres-esgcet-secrets
                  key: database-password
            - name: ESGF_PUBLISHER_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-postgres-esgcet-secrets
                  key: database-publisher-password
            - name: ESGF_ROOTADMIN_USERNAME
              value: rootAdmin
            - name: ESGF_ROOTADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: esgf-cog-secrets
                  key: rootadmin-password
          volumeMounts:
            - mountPath: /esg/certificates/esg-trust-bundle.pem
              name: trust-bundle
              subPath: esg-trust-bundle.pem
      volumes:
        - name: trust-bundle
          configMap:
            name: esgf-trust-bundle
